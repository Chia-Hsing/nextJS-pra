{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chia/Projects/I/NextJS/nextjs-course/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/chia/Projects/I/NextJS/nextjs-course/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/chia/Projects/I/NextJS/nextjs-course/components/contact/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nfunction sendContactData(_x) {\n  return _sendContactData.apply(this, arguments);\n}\n\nfunction _sendContactData() {\n  _sendContactData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(contactDetails) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('/api/contact', {\n              method: 'POST',\n              body: JSON.stringify(contactDetails),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw new Error(data.message || 'Something went wrong!');\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _sendContactData.apply(this, arguments);\n}\n\nfunction ContactForm() {\n  _s();\n\n  var _useState = useState(''),\n      enteredEmail = _useState[0],\n      setEnteredEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      enteredName = _useState2[0],\n      setEnteredName = _useState2[1];\n\n  var _useState3 = useState(''),\n      enteredMessage = _useState3[0],\n      setEnteredMessage = _useState3[1];\n\n  var _useState4 = useState(),\n      requestStatus = _useState4[0],\n      setRequestStatus = _useState4[1]; // 'pending', 'success', 'error'\n\n\n  var _useState5 = useState(),\n      requestError = _useState5[0],\n      setRequestError = _useState5[1];\n\n  useEffect(function () {\n    if (requestStatus === 'success' || requestStatus === 'error') {\n      var timer = setTimeout(function () {\n        setRequestStatus(null);\n        setRequestError(null);\n      }, 3000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [requestStatus]);\n\n  function sendMessageHandler(_x2) {\n    return _sendMessageHandler.apply(this, arguments);\n  }\n\n  function _sendMessageHandler() {\n    _sendMessageHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault(); // optional: add client-side validation\n\n              setRequestStatus('pending');\n              _context.prev = 2;\n              _context.next = 5;\n              return sendContactData({\n                email: enteredEmail,\n                name: enteredName,\n                message: enteredMessage\n              });\n\n            case 5:\n              setRequestStatus('success');\n              setEnteredMessage('');\n              setEnteredEmail('');\n              setEnteredName('');\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              setRequestError(_context.t0.message);\n              setRequestStatus('error');\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    }));\n    return _sendMessageHandler.apply(this, arguments);\n  }\n\n  var notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: 'Your message is on its way!'\n    };\n  }\n\n  if (requestStatus === 'success') {\n    notification = {\n      status: 'success',\n      title: 'Success!',\n      message: 'Message sent successfully!'\n    };\n  }\n\n  if (requestStatus === 'error') {\n    notification = {\n      status: 'error',\n      title: 'Error!',\n      message: requestError\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How can I help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            value: enteredEmail,\n            onChange: function onChange(event) {\n              return setEnteredEmail(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            value: enteredName,\n            onChange: function onChange(event) {\n              return setEnteredName(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          rows: \"5\",\n          required: true,\n          value: enteredMessage,\n          onChange: function onChange(event) {\n            return setEnteredMessage(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactForm, \"LNZ8Pbj4DDGofzABNPT0BzH6UlY=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/chia/Projects/I/NextJS/nextjs-course/components/contact/ContactForm.js"],"names":["useState","useEffect","classes","Notification","sendContactData","contactDetails","fetch","method","body","JSON","stringify","headers","response","json","data","ok","Error","message","ContactForm","enteredEmail","setEnteredEmail","enteredName","setEnteredName","enteredMessage","setEnteredMessage","requestStatus","setRequestStatus","requestError","setRequestError","timer","setTimeout","clearTimeout","sendMessageHandler","event","preventDefault","email","name","notification","status","title","contact","form","controls","control","target","value","actions"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;SAEeC,e;;;;;8EAAf,kBAA+BC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC2BC,KAAK,CAAC,cAAD,EAAiB;AACzCC,cAAAA,MAAM,EAAE,MADiC;AAEzCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,cAAf,CAFmC;AAGzCM,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX;AAHgC,aAAjB,CADhC;;AAAA;AACUC,YAAAA,QADV;AAAA;AAAA,mBASuBA,QAAQ,CAACC,IAAT,EATvB;;AAAA;AASUC,YAAAA,IATV;;AAAA,gBAWSF,QAAQ,CAACG,EAXlB;AAAA;AAAA;AAAA;;AAAA,kBAYc,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAL,IAAgB,uBAA1B,CAZd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBA,SAASC,WAAT,GAAuB;AAAA;;AAAA,kBACqBlB,QAAQ,CAAC,EAAD,CAD7B;AAAA,MACZmB,YADY;AAAA,MACEC,eADF;;AAAA,mBAEmBpB,QAAQ,CAAC,EAAD,CAF3B;AAAA,MAEZqB,WAFY;AAAA,MAECC,cAFD;;AAAA,mBAGyBtB,QAAQ,CAAC,EAAD,CAHjC;AAAA,MAGZuB,cAHY;AAAA,MAGIC,iBAHJ;;AAAA,mBAIuBxB,QAAQ,EAJ/B;AAAA,MAIZyB,aAJY;AAAA,MAIGC,gBAJH,kBAIkC;;;AAJlC,mBAKqB1B,QAAQ,EAL7B;AAAA,MAKZ2B,YALY;AAAA,MAKEC,eALF;;AAOnB3B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIwB,aAAa,KAAK,SAAlB,IAA+BA,aAAa,KAAK,OAArD,EAA8D;AAC1D,UAAMI,KAAK,GAAGC,UAAU,CAAC,YAAM;AAC3BJ,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,QAAAA,eAAe,CAAC,IAAD,CAAf;AACH,OAHuB,EAGrB,IAHqB,CAAxB;AAKA,aAAO;AAAA,eAAMG,YAAY,CAACF,KAAD,CAAlB;AAAA,OAAP;AACH;AACJ,GATQ,EASN,CAACJ,aAAD,CATM,CAAT;;AAPmB,WAkBJO,kBAlBI;AAAA;AAAA;;AAAA;AAAA,mFAkBnB,iBAAkCC,KAAlC;AAAA;AAAA;AAAA;AAAA;AACIA,cAAAA,KAAK,CAACC,cAAN,GADJ,CAGI;;AAEAR,cAAAA,gBAAgB,CAAC,SAAD,CAAhB;AALJ;AAAA;AAAA,qBAQctB,eAAe,CAAC;AAClB+B,gBAAAA,KAAK,EAAEhB,YADW;AAElBiB,gBAAAA,IAAI,EAAEf,WAFY;AAGlBJ,gBAAAA,OAAO,EAAEM;AAHS,eAAD,CAR7B;;AAAA;AAaQG,cAAAA,gBAAgB,CAAC,SAAD,CAAhB;AACAF,cAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAJ,cAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,cAAAA,cAAc,CAAC,EAAD,CAAd;AAhBR;AAAA;;AAAA;AAAA;AAAA;AAkBQM,cAAAA,eAAe,CAAC,YAAMX,OAAP,CAAf;AACAS,cAAAA,gBAAgB,CAAC,OAAD,CAAhB;;AAnBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlBmB;AAAA;AAAA;;AAyCnB,MAAIW,YAAJ;;AAEA,MAAIZ,aAAa,KAAK,SAAtB,EAAiC;AAC7BY,IAAAA,YAAY,GAAG;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXC,MAAAA,KAAK,EAAE,oBAFI;AAGXtB,MAAAA,OAAO,EAAE;AAHE,KAAf;AAKH;;AAED,MAAIQ,aAAa,KAAK,SAAtB,EAAiC;AAC7BY,IAAAA,YAAY,GAAG;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXC,MAAAA,KAAK,EAAE,UAFI;AAGXtB,MAAAA,OAAO,EAAE;AAHE,KAAf;AAKH;;AAED,MAAIQ,aAAa,KAAK,OAAtB,EAA+B;AAC3BY,IAAAA,YAAY,GAAG;AACXC,MAAAA,MAAM,EAAE,OADG;AAEXC,MAAAA,KAAK,EAAE,QAFI;AAGXtB,MAAAA,OAAO,EAAEU;AAHE,KAAf;AAKH;;AAED,sBACI;AAAS,IAAA,SAAS,EAAEzB,OAAO,CAACsC,OAA5B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAEtC,OAAO,CAACuC,IAAzB;AAA+B,MAAA,QAAQ,EAAET,kBAAzC;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE9B,OAAO,CAACwC,QAAxB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAExC,OAAO,CAACyC,OAAxB;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,EAAE,EAAC,OAAvB;AAA+B,YAAA,QAAQ,MAAvC;AAAwC,YAAA,KAAK,EAAExB,YAA/C;AAA6D,YAAA,QAAQ,EAAE,kBAACc,KAAD;AAAA,qBAAWb,eAAe,CAACa,KAAK,CAACW,MAAN,CAAaC,KAAd,CAA1B;AAAA;AAAvE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAE3C,OAAO,CAACyC,OAAxB;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,MAAtB;AAA6B,YAAA,QAAQ,MAArC;AAAsC,YAAA,KAAK,EAAEtB,WAA7C;AAA0D,YAAA,QAAQ,EAAE,kBAACY,KAAD;AAAA,qBAAWX,cAAc,CAACW,KAAK,CAACW,MAAN,CAAaC,KAAd,CAAzB;AAAA;AAApE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAE3C,OAAO,CAACyC,OAAxB;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,EAAE,EAAC,SAAb;AAAuB,UAAA,IAAI,EAAC,GAA5B;AAAgC,UAAA,QAAQ,MAAxC;AAAyC,UAAA,KAAK,EAAEpB,cAAhD;AAAgE,UAAA,QAAQ,EAAE,kBAACU,KAAD;AAAA,mBAAWT,iBAAiB,CAACS,KAAK,CAACW,MAAN,CAAaC,KAAd,CAA5B;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAgBI;AAAK,QAAA,SAAS,EAAE3C,OAAO,CAAC4C,OAAxB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAsBKT,YAAY,iBAAI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,YAAY,CAACC,MAAnC;AAA2C,MAAA,KAAK,EAAED,YAAY,CAACE,KAA/D;AAAsE,MAAA,OAAO,EAAEF,YAAY,CAACpB;AAA5F;AAAA;AAAA;AAAA;AAAA,YAtBrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GA7FQC,W;;KAAAA,W;AA+FT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport classes from './contact-form.module.css'\nimport Notification from '../ui/notification'\n\nasync function sendContactData(contactDetails) {\n    const response = await fetch('/api/contact', {\n        method: 'POST',\n        body: JSON.stringify(contactDetails),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n\n    const data = await response.json()\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Something went wrong!')\n    }\n}\n\nfunction ContactForm() {\n    const [enteredEmail, setEnteredEmail] = useState('')\n    const [enteredName, setEnteredName] = useState('')\n    const [enteredMessage, setEnteredMessage] = useState('')\n    const [requestStatus, setRequestStatus] = useState() // 'pending', 'success', 'error'\n    const [requestError, setRequestError] = useState()\n\n    useEffect(() => {\n        if (requestStatus === 'success' || requestStatus === 'error') {\n            const timer = setTimeout(() => {\n                setRequestStatus(null)\n                setRequestError(null)\n            }, 3000)\n\n            return () => clearTimeout(timer)\n        }\n    }, [requestStatus])\n\n    async function sendMessageHandler(event) {\n        event.preventDefault()\n\n        // optional: add client-side validation\n\n        setRequestStatus('pending')\n\n        try {\n            await sendContactData({\n                email: enteredEmail,\n                name: enteredName,\n                message: enteredMessage,\n            })\n            setRequestStatus('success')\n            setEnteredMessage('')\n            setEnteredEmail('')\n            setEnteredName('')\n        } catch (error) {\n            setRequestError(error.message)\n            setRequestStatus('error')\n        }\n    }\n\n    let notification\n\n    if (requestStatus === 'pending') {\n        notification = {\n            status: 'pending',\n            title: 'Sending message...',\n            message: 'Your message is on its way!',\n        }\n    }\n\n    if (requestStatus === 'success') {\n        notification = {\n            status: 'success',\n            title: 'Success!',\n            message: 'Message sent successfully!',\n        }\n    }\n\n    if (requestStatus === 'error') {\n        notification = {\n            status: 'error',\n            title: 'Error!',\n            message: requestError,\n        }\n    }\n\n    return (\n        <section className={classes.contact}>\n            <h1>How can I help you?</h1>\n            <form className={classes.form} onSubmit={sendMessageHandler}>\n                <div className={classes.controls}>\n                    <div className={classes.control}>\n                        <label htmlFor=\"email\">Your Email</label>\n                        <input type=\"email\" id=\"email\" required value={enteredEmail} onChange={(event) => setEnteredEmail(event.target.value)} />\n                    </div>\n                    <div className={classes.control}>\n                        <label htmlFor=\"name\">Your Name</label>\n                        <input type=\"text\" id=\"name\" required value={enteredName} onChange={(event) => setEnteredName(event.target.value)} />\n                    </div>\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor=\"message\">Your Message</label>\n                    <textarea id=\"message\" rows=\"5\" required value={enteredMessage} onChange={(event) => setEnteredMessage(event.target.value)}></textarea>\n                </div>\n\n                <div className={classes.actions}>\n                    <button>Send Message</button>\n                </div>\n            </form>\n            {notification && <Notification status={notification.status} title={notification.title} message={notification.message} />}\n        </section>\n    )\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}