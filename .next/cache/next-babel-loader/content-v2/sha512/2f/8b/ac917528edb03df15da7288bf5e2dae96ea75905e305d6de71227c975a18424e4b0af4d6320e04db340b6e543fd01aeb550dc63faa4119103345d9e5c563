{"ast":null,"code":"import _defineProperty from \"/Users/chia/Projects/I/NextJS/nextjs-course/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nvar postsDirectory = path.join(process.cwd(), 'posts');\nexport var getPostsFiles = function getPostsFiles() {\n  return fs.readdirSync(postsDirectory);\n};\nexport var getPostData = function getPostData(postIdentifier) {\n  var postSlug = postIdentifier.replace(/\\.md$/, '');\n  var filePath = path.join(postsDirectory, \"\".concat(postSlug, \".md\"));\n  var fileContent = fs.readFileSync(filePath, 'utf-8');\n\n  var _matter = matter(fileContent),\n      data = _matter.data,\n      content = _matter.content;\n\n  var postData = _objectSpread(_objectSpread({\n    slug: postSlug\n  }, data), {}, {\n    content: content\n  });\n\n  return postData;\n};\nexport var getAllPosts = function getAllPosts() {\n  var postFiles = getPostsFiles();\n  var allPosts = postFiles.map(function (postFile) {\n    return getPostData(postFile);\n  });\n  var sortedPost = allPosts.sort(function (A, B) {\n    return A.date > B.date ? -1 : 1;\n  });\n  return sortedPost;\n};\nexport var getFeaturedPosts = function getFeaturedPosts() {\n  var allPosts = getAllPosts();\n  var featuredPosts = allPosts.filter(function (post) {\n    return post.isFeatured;\n  });\n  return featuredPosts;\n};","map":{"version":3,"sources":["/Users/chia/Projects/I/NextJS/nextjs-course/lib/posts-util.js"],"names":["fs","path","matter","postsDirectory","join","process","cwd","getPostsFiles","readdirSync","getPostData","postIdentifier","postSlug","replace","filePath","fileContent","readFileSync","data","content","postData","slug","getAllPosts","postFiles","allPosts","map","postFile","sortedPost","sort","A","B","date","getFeaturedPosts","featuredPosts","filter","post","isFeatured"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,cAAc,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,CAAvB;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAOP,EAAE,CAACQ,WAAH,CAAeL,cAAf,CAAP;AACH,CAFM;AAIP,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,cAAD,EAAoB;AAC3C,MAAMC,QAAQ,GAAGD,cAAc,CAACE,OAAf,CAAuB,OAAvB,EAAgC,EAAhC,CAAjB;AACA,MAAMC,QAAQ,GAAGZ,IAAI,CAACG,IAAL,CAAUD,cAAV,YAA6BQ,QAA7B,SAAjB;AACA,MAAMG,WAAW,GAAGd,EAAE,CAACe,YAAH,CAAgBF,QAAhB,EAA0B,OAA1B,CAApB;;AAH2C,gBAIjBX,MAAM,CAACY,WAAD,CAJW;AAAA,MAInCE,IAJmC,WAInCA,IAJmC;AAAA,MAI7BC,OAJ6B,WAI7BA,OAJ6B;;AAM3C,MAAMC,QAAQ;AACVC,IAAAA,IAAI,EAAER;AADI,KAEPK,IAFO;AAGVC,IAAAA,OAAO,EAAPA;AAHU,IAAd;;AAMA,SAAOC,QAAP;AACH,CAbM;AAeP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,MAAMC,SAAS,GAAGd,aAAa,EAA/B;AAEA,MAAMe,QAAQ,GAAGD,SAAS,CAACE,GAAV,CAAc,UAACC,QAAD,EAAc;AACzC,WAAOf,WAAW,CAACe,QAAD,CAAlB;AACH,GAFgB,CAAjB;AAIA,MAAMC,UAAU,GAAGH,QAAQ,CAACI,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAAlC;AAAA,GAAd,CAAnB;AAEA,SAAOJ,UAAP;AACH,CAVM;AAYP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAClC,MAAMR,QAAQ,GAAGF,WAAW,EAA5B;AAEA,MAAMW,aAAa,GAAGT,QAAQ,CAACU,MAAT,CAAgB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,UAAf;AAAA,GAAhB,CAAtB;AAEA,SAAOH,aAAP;AACH,CANM","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\n\nconst postsDirectory = path.join(process.cwd(), 'posts')\nexport const getPostsFiles = () => {\n    return fs.readdirSync(postsDirectory)\n}\n\nexport const getPostData = (postIdentifier) => {\n    const postSlug = postIdentifier.replace(/\\.md$/, '')\n    const filePath = path.join(postsDirectory, `${postSlug}.md`)\n    const fileContent = fs.readFileSync(filePath, 'utf-8')\n    const { data, content } = matter(fileContent)\n\n    const postData = {\n        slug: postSlug,\n        ...data,\n        content,\n    }\n\n    return postData\n}\n\nexport const getAllPosts = () => {\n    const postFiles = getPostsFiles()\n\n    const allPosts = postFiles.map((postFile) => {\n        return getPostData(postFile)\n    })\n\n    const sortedPost = allPosts.sort((A, B) => (A.date > B.date ? -1 : 1))\n\n    return sortedPost\n}\n\nexport const getFeaturedPosts = () => {\n    const allPosts = getAllPosts()\n\n    const featuredPosts = allPosts.filter((post) => post.isFeatured)\n\n    return featuredPosts\n}\n"]},"metadata":{},"sourceType":"module"}